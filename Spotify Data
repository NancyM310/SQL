# For this project, I downloaded Spotify data from Kaggle. 
# Next, I created a table and inserted the Spotify data into it. 
# Finally, I used SQL to perform analytics on the data. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL);

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#What is the average danceability by artist and track? 
SELECT artist_name, track_name, avg(danceability)
    FROM BIT_DB.spotifydata
    GROUP BY artist_name, track_name;

#What is the average danceability, popularity, and energy by artisit and track?
SELECT artist_name,track_name,avg(popularity),avg(danceability),avg(energy)
  FROM BIT_DB.spotifydata
  GROUP BY artist_name, track_name;

#Who are the Top 10 artists by popularity?
SELECT track_name, artist_name, popularity
  FROM BIT_DB.spotifydata
  ORDER BY popularity desc
  LIMIT 10

#What artisit released the longest song?
SELECT artist_name, track_name, duration_ms
    FROM BIT_DB.Spotifydata
    ORDER BY duration_ms DESC
    LIMIT 1;

#What's the average danceability for the 10 most popular songs?
SELECT  avg(danceability)
    FROM BIT_DB.Spotifydata
    ORDER BY danceability desc
    LIMIT 10;
